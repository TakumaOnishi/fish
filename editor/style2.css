/* おまじない */
@charset "UTF-8";
/* フォントを借りてくる */
@import url('https://fonts.googleapis.com/css2?family=DM+Mono&family=Zen+Maru+Gothic:wght@400;500&display=swap');

/* 各HTML要素を修飾する */
:root{
   --bg: hsl(0, 0%, 20%);
   --bgdark: hsl(0, 0%, 100%);
   --tx: #eee;
   --txweak: #eee8;
   --glow: #fff2;
   --l1: hsl(188, 55%, 60%);
   --l2: hsl(332, 80%, 60%);
}

*{
   box-sizing: border-box;
}

body{
   padding: 0;
   margin: 0;
   width: 100vw;
   height: 100vh;
   background-color: var(--bg);
   color: var(--tx);
   text-align: center;
   font-weight: 400;
   font-family: 'Zen Maru Gothic', sans-serif;
   overflow: hidden;
   position: relative;
}

#upper{
   width: 100%;
   height: 100%;
   overflow-y: scroll;
   display: flex;
   justify-content: center;
   align-items: flex-start;
   flex-flow: row; /* 横並びにする */
   flex-wrap: wrap; /* 折り返しする */
   gap: .3rem;
   padding: 1rem 1rem 0;
   position: relative;
   transition: opacity .2s ease;
}

#filter{
   width: 6.3rem;
   height: 3rem;
   display: block;
   text-align: left;
   position: relative;
   background-color: transparent;
   border-radius: .5rem;
   transition: opacity .2s ease;
}

#filter:hover{
   background-color: var(--glow);
}

#filter > p{
   position: absolute;
   top: 0;
   left: 0;
   margin: 0;
   font-size: .9rem;
}

#filter > select{
   width: 100%;
   height: 100%;
   padding: .8rem 0 .2rem;
   appearance: none;
   font-size: 1.2rem;
   line-height: 2rem;
   border: none;
   background-color: transparent;
   cursor: pointer;
   position: relative;
   color: var(--tx);
   font-weight: 500;
   font-family: 'Zen Maru Gothic', sans-serif;
   outline: none;
}

#filter::after{
   content: "▼";
   font-size: .5rem;
   font-family: 'DM Mono', monospace;
   color: var(--tx);
   position: absolute;
   right: .5rem;
   top: 2rem;
   transform: translate(-50%, -50%) scale(200%, 100%);
   pointer-events: none;
}

.tag{
   width: 3rem;
   height: 3rem;
   display: flex;
   align-items: end;
   justify-content: end;
   transition: opacity .2s ease;
}

.tag > a{
   appearance: none;
   text-decoration: none;
   width: fit-content;
   height: 100%;
   writing-mode: vertical-rl;
   font-size: .7rem;
   line-height: .7rem;
   padding-left: .3rem;
   padding-right: .1rem;
   font-weight: 500;
   color: var(--bg);
   word-break: break-all;
   background-color: var(--tx);
   border-radius: .5rem 0 0 .5rem;
   cursor: help;
}

.tag > a:hover{
   background-color: white;
}

.weak{
   opacity: .4;
}

.weak:not(.key){
   pointer-events: none;
}

.code, .grabbing{
   width: 3rem;
   height: 3rem;
   font-size: .9rem;
   line-height: 1rem;
   display: flex;
   align-items: center;
   justify-content: center;
   border-radius: .4rem;
   border: solid .1rem var(--tx);
   background-color: var(--bg);
   box-shadow: .1rem .2rem .3rem #0004;
   cursor: pointer;
   position: relative;
   word-break: break-word;
   transition: opacity .2s ease;
}

.grabbing{
   background-color: transparent;
   position: absolute;
   top: 0;
   left: 0;
   z-index: 9;
   pointer-events: none;
   animation: blink .6s ease-in-out infinite alternate;
}

@keyframes blink{
   0% {opacity: 0.4;}
   100% {opacity: 1;}
}

.code:has(.mod, .lay), .grabbing:has(.mod, .lay){
   border-radius: 50%;
}

.code:hover{
   background-color: var(--glow);
}

.code p{
   pointer-events: none;
}

.material-symbols-rounded {
   font-variation-settings: 'wght' 340;
}

.hint{
   position: absolute;
   left: 50%;
   top: 100%;
   border-radius: .7rem;
   font-size: .7rem;
   line-height: .8rem;
   overflow-wrap: break-word;
   word-break: break-word;
   width: 5rem;
   padding: .3rem .4rem;
   text-align: left;
   font-weight: 500;
   transform: translate(-50%, .25rem);
   background-color: var(--tx);
   color: var(--bgdark);
   opacity: 0;
   z-index: 9;
   box-shadow: .1rem .2rem .3rem #0004;
   transition: opacity .2s ease;
   cursor: default;
   pointer-events: none;
}

.hint .material-symbols-rounded{
   font-size: .8rem !important;
   line-height: .8rem !important;
}

.legend > .hint, #combo_hints > .hint{
   top: unset;
   bottom: 100%;
   transform: translate(-50%, -.25rem);
}

.code:hover > div, .hint.hover{
   opacity: 1;
   pointer-events: none;
}

.hint::after{
   content: "▲";
   font-family: 'DM Mono', monospace;
   position: absolute;
   top: 0;
   left: 50%;
   color: var(--tx);
   font-size: 1rem;
   transform: translate(-50%, -.6rem) scale(200%, 100%);
}

.legend > .hint::after, #combo_hints > .hint::after{
   content: "▼";
   top: unset;
   bottom: 0;
   transform: translate(-50%, .6rem) scale(200%, 100%);
   text-shadow: .1rem .2rem .2rem #0004;
}

#add_custom{
   width: 2.6rem;
   height: 2.6rem;
   margin: .2rem;
   border-radius: 50%;
   background-color: var(--tx);
   color: var(--bg);
   font-weight: 500;
   display: flex;
   justify-content: center;
   align-items: center;
   font-size: 1.1rem;
   box-shadow: .1rem .2rem .3rem #0004;
   cursor: pointer;
   position: relative;
   transition: opacity .2s ease;
}

#add_custom:hover > div, .hint.hover{
   opacity: 1;
   pointer-events: none;
}

.mono{
   display: block;
   font-family: 'DM Mono', monospace;
   color: inherit;
   background-color: #0002;
   padding: .1rem .2rem;
   border-radius: .2rem;
   width: fit-content;
   text-decoration: none;
   cursor: help;
}

.hint > div{
   width: 100%;
   height: .8rem;
   margin-top: .3rem;
   display: flex;
   gap: .15rem;
}

.hint > div > img{
   height: .8rem;
   opacity: 0;
}

.hint.w img:nth-child(1){
   opacity: 1;
}

.hint.m img:nth-child(2){
   opacity: 1;
}

.hint.l img:nth-child(3){
   opacity: 1;
}

.hint.i img:nth-child(4){
   opacity: 1;
}

.hint.a img:nth-child(5){
   opacity: 1;
}

.hint > p{
   margin: 0;
}

.small{
   font-size: .75rem;
   line-height: .75rem;
}

.big, .big .material-symbols-rounded{
   font-size: 1.15rem;
   line-height: 1.15rem;
}

#upper_fade{
   width: 100vw;
   height: 20rem;
   pointer-events: all;
   position: sticky;
   bottom: 0;
   left: 0;
   margin: 0 -1rem;
   z-index: 2;
   pointer-events: none;
}

#upper_fade > div:first-child{
   width: 100%;
   height: 2rem;
   background: linear-gradient(transparent, var(--bg));
}

#upper_fade > div:last-child{
   width: 100%;
   height: 18rem;
   background-color: var(--bg);
   pointer-events: all;
}

#lower{
   width: 100%;
   position: absolute;
   bottom: 0;
   left: 0;
   height: 18rem;
   padding: 0 1rem;
   display: flex;
   align-items: center;
   justify-content: space-evenly;
   z-index: 3;
   pointer-events: none;
   transition: opacity .2s ease;
}

#left, #right{
   position: relative;
   height: 100%;
}

#left_keys, #right_keys{
   height: 16rem;
   margin: 1rem 0;
   pointer-events: all;
   filter: drop-shadow( .1rem .2rem .3rem #0006);
}

.key{
   cursor: pointer;
   transition: opacity .2s ease;
}

.key:hover{
   fill: #fff;
}

.left_layer, .right_layer, .left_combo, .right_combo{
   position: absolute;
   top: 0;
   left: 0;
   width: 100%;
   height: 100%;
   opacity: 0;
   transition: opacity .2s ease;
}

.left_layer.editing, .right_layer.editing, .left_combo.editing, .right_combo.editing{
   opacity: 1;
}

.col, .row{
   position: absolute;
   display: flex;
   flex-flow: column;
   gap: .15rem;
   align-items: center;
   justify-content: center;
   pointer-events: none;
}

.row{
   flex-flow: row;
   gap: .1rem;
}

.legend{
   position: relative;
   width: 3.1rem;
   height: 3rem;
   border-radius: .4rem;
   color: var(--bgdark);
   font-weight: 500;
   font-size: .9rem;
   line-height: .9rem;
   display: flex;
   align-items: center;
   justify-content: center;
   overflow: visible;
   word-break: keep-all;
}

.legend .material-symbols-rounded{
   transform: translate(0, 18%);
   font-variation-settings: 'wght' 400;
}

#map{
   max-height: 100%;
   width: 6rem;
   display: flex;
   flex-flow: column;
   align-items: center;
   overflow-y: scroll;
   position: relative;
   pointer-events: all;
   transition: opacity .2s ease;
}

#lower_fade{
   width: 100%;
   height: 2rem; /* なぜか効かないので文字を入れて高さを出す */
   line-height: 2rem;
   background: linear-gradient(var(--bg), transparent);
   pointer-events: none;
   position: sticky;
   top: 0;
   left: 0;
   z-index: 2;
}

#layers, #combos{
   font-size: .9rem;
   margin-bottom: .6rem;
}

.header{
   width: 5rem;
   height: 1.1rem;
   display: flex;
   flex-flow: row;
   font-size: .7rem;
   font-weight: 500;
   border-radius: .5rem .5rem 0 0;
   background-color: var(--tx);
   color: var(--bg);
   margin: 0 .5rem .3rem;
   overflow: hidden;
   transition: opacity .2s ease;
}

.header_button{
   width: 1.4rem;
   height: 100%;
   display: flex;
   align-items: center;
   justify-content: center;
   background-color: transparent;
   cursor: pointer;
   transition: opacity .2s ease;
}

.header_button.disabled{
   opacity: 0;
   pointer-events: none;
}

.header_button:not(.innactive):hover, .header > a:hover{
   background-color: white;
}

.header > a{
   width: 2.8rem;
   height: 100%;
   appearance: none;
   text-decoration: none;
   padding-bottom: .2rem;
   color: var(--tx);
   cursor: help;
   color: var(--bg);
}

.layer, .combo{
   width: 6rem;
   padding: 0 .3rem .2rem;
   height: 1.4rem;
   display: flex;
   align-items: center;
   justify-content: center;
   line-height: 1.2rem;
   border-radius: .8rem;
   background-color: transparent;
   cursor: pointer;
   box-shadow: none;
   transition: box-shadow .2s ease;
   color: var(--txweak);
}

.layer:hover, .combo:hover{
   background-color: var(--glow);
}

.layer.editing, .combo.editing, .layer:active, .combo:active{
   box-shadow: -.05rem -.1rem .2rem #cff4 inset, .05rem .1rem .2rem #0004 inset;
   color: var(--tx);
   cursor: text;
   transition: none;
}

.layer input, .combo input{
   width: 100%;
   background: none;
   color: inherit;
   font-family: inherit;
   font-weight: inherit;
   appearance: none;
   outline: none;
   border: none;
   text-align: center;
   pointer-events: none;
   cursor: pointer;
}

.layer.editing input, .combo.editing input{
   pointer-events: all;
   cursor: text;
}

#lower_offset{
   width: 100%;
   height: 2rem;
}

.button{
   position: absolute;
   height: 3rem;
   border-radius: 1.5rem;
   color: var(--tx);
   background-color: var(--bg);
   box-shadow: -.1rem -.2rem .3rem #cff4, .1rem .2rem .3rem #0004;
   display: flex;
   justify-content: center;
   align-items: center;
   font-size: 1.2rem;
   font-weight: 500;
   transition: box-shadow .2s ease, opacity .2s ease;
   pointer-events: all;
   cursor: pointer;
   z-index: 3;
}

.button:hover{
   background-color: var(--glow);
}

.button:active{
   box-shadow: -.1rem -.2rem .3rem #cff1, .1rem .2rem .3rem #0001;
   background-color: var(--bg);
   transition: none;
}

#load{
   width: 7rem;
   left: 1rem;
   bottom: 1rem;
}

#save{
   width: 7rem;
   right: 1rem;
   bottom: 1rem;
}

#help{
   width: 3rem;
   left: 1rem;
   bottom: 14rem;
}

#conf{
   width: 3rem;
   right: 1rem;
   bottom: 14rem;
}


/*
以下、legendを並べる
*/

/* 回転 */
.c0{
   transform: rotate(-6deg);
}

.c1, .c6{
   transform: rotate(-4deg);
}

.c2, .c7{
   transform: rotate(-2deg);
}

.c4, .c9{
   transform: rotate(2deg);
}

.c5, .ca{
   transform: rotate(4deg);
}

.cb{
   transform: rotate(6deg);
}

.r0{
   transform: rotate(18deg);
}

.r1{
   transform: rotate(-18deg);
}

/* X座標 */
.c0{
   right: 18.2rem;
}
.cb{
   left: 18.2rem;
}

.c1{
   right: 14.9rem;
}
.ca{
   left: 14.9rem;
}

.c2{
   right: 11.8rem;
}
.c9{
   left: 11.8rem;
}

.c3{
   right: 8.55rem;
}
.c8{
   left: 8.55rem;
}

.c4{
   right: 5.3rem;
}
.c7{
   left: 5.3rem;
}

.c5{
   right: 2rem;
}
.c6{
   left: 2rem;
}

.r0{
   right: 1.75rem;
}
.r1{
   left: 1.75rem;
}

/* Y座標 */
.c0, .cb{
   top: 6.7rem;
}

.c1, .ca{
   top: 6rem;
}

.c2, .c9, .c4, .c7{
   top: 2.3rem;
}

.c3, .c8{
   top: 1.9rem;
}

.c5, .c6{
   top: 3.35rem;
}

.r0, .r1{
   top: 12.8rem;
}

.left_layer, .right_layer{
   opacity: 1;
}

.left_layer:nth-child(2) .legend, .right_layer:nth-child(2) .legend{
   transform: translate(0, -.5rem);
}

.left_layer:nth-child(3) .legend, .right_layer:nth-child(3) .legend{
   transform: translate(-.8rem, .5rem) scale(80%);
   color: var(--l1);
}

.left_layer:nth-child(4) .legend, .right_layer:nth-child(4) .legend{
   transform: translate(.8rem, .5rem) scale(80%);
   color: var(--l2);
}